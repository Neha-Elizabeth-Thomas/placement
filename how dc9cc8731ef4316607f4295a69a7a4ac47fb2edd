[33mcommit f391e792cd0b61e733fb5a9762c3d34b9598a136[m
Author: asmapa <asmapa122002@gmail.com>
Date:   Wed Feb 19 21:21:55 2025 +0530

    updated

[1mdiff --git a/Backend_server/src/controller/DriveController.js b/Backend_server/src/controller/DriveController.js[m
[1mindex 110af0a..508092d 100644[m
[1m--- a/Backend_server/src/controller/DriveController.js[m
[1m+++ b/Backend_server/src/controller/DriveController.js[m
[36m@@ -40,6 +40,26 @@[m [mexport const getPastDrivesController = async (req, res) => {[m
     }[m
 };[m
 [m
[32m+[m[32mexport const deleteDrive = async (req, res) => {[m
[32m+[m[32m    try {[m
[32m+[m[32m        const { drive_id } = req.params; // Get company_id from the route params[m
[32m+[m[32m        const deletedDrive = await DriveServices.deleteDrive(drive_id);[m
[32m+[m
[32m+[m[32m        if (!deletedDrive) {[m
[32m+[m[32m            return res.status(404).json({ message: 'Drive not found' });[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return res.status(200).json({[m
[32m+[m[32m            message: 'drive deleted successfully',[m
[32m+[m[32m            data: deletedCompany[m
[32m+[m[32m        });[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m        console.error('Error deleting error:', error);[m
[32m+[m[32m        return res.status(500).json({ message: 'Internal Server Error' });[m
[32m+[m[32m    }[m
[32m+[m[32m};[m
[32m+[m
[32m+[m
 export const getOngoingDrivesController = async (req, res) => {[m
     try {[m
         const drives = await DriveServices.getOngoingDrives();[m
[36m@@ -48,4 +68,28 @@[m [mexport const getOngoingDrivesController = async (req, res) => {[m
         console.error('Error fetching ongoing drives:', error);[m
         return res.status(500).json({ message: 'Internal Server Error' });[m
     }[m
[31m-};[m
\ No newline at end of file[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport const updateDrive = async (req, res) => {[m
[32m+[m[32m    try {[m
[32m+[m[32m        const drive_id = parseInt(req.body.drive_id, 10);[m
[32m+[m[32m        if (isNaN(drive_id)) {[m
[32m+[m[32m            return res.status(400).json({ error: "Invalid drive_id" });[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        const { drive_id: _, ...driveData } = req.body; // Remove drive_id from data[m
[32m+[m
[32m+[m[32m        // Ensure null-safe values[m
[32m+[m[32m        const safeValue = (value) => (value === undefined || value === "" ? null : value);[m
[32m+[m[32m        const updatedData = Object.fromEntries([m
[32m+[m[32m            Object.entries(driveData).map(([key, value]) => [key, safeValue(value)])[m
[32m+[m[32m        );[m
[32m+[m
[32m+[m[32m        const updatedDrive = await DriveServices.updateDrive(drive_id, updatedData);[m
[32m+[m
[32m+[m[32m        res.status(200).json({ message: "Drive updated successfully", updatedDrive });[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m        console.error("Error updating Drive:", error.message);[m
[32m+[m[32m        res.status(500).json({ error: error.message || "Failed to update Drive" });[m
[32m+[m[32m    }[m
[32m+[m[32m};[m
[1mdiff --git a/Backend_server/src/routes/DriveRoutes.js b/Backend_server/src/routes/DriveRoutes.js[m
[1mindex 59e490c..c6671cb 100644[m
[1m--- a/Backend_server/src/routes/DriveRoutes.js[m
[1m+++ b/Backend_server/src/routes/DriveRoutes.js[m
[36m@@ -6,6 +6,10 @@[m [mconst router = express.Router();[m
 [m
 router.post("/add-drive", DriveController.addDrive);[m
 [m
[32m+[m[32mrouter.put("/updateDrive", DriveController.updateDrive);[m
[32m+[m
[32m+[m[32mrouter.delete("/deleteDrive", DriveController.deleteDrive);[m
[32m+[m
 router.get('/getdrives', DriveController.getAllDrives);[m
 [m
 // Route to get upcoming drives[m
[36m@@ -23,4 +27,5 @@[m [mexport default router;[m
 //http://localhost:3000/portal/drives/upcoming[m
 //http://localhost:3000/portal/drives/past[m
 //http://localhost:3000/portal/drives/ongoing[m
[31m-//http://localhost:3000/portal/getdrives[m
\ No newline at end of file[m
[32m+[m[32m//http://localhost:3000/portal/getdrives[m
[32m+[m[32m//http://localhost:3000/portal/updateDrive[m
\ No newline at end of file[m
[1mdiff --git a/Backend_server/src/services/DriveServices.js b/Backend_server/src/services/DriveServices.js[m
[1mindex a004cb8..57c7a59 100644[m
[1m--- a/Backend_server/src/services/DriveServices.js[m
[1m+++ b/Backend_server/src/services/DriveServices.js[m
[36m@@ -48,6 +48,14 @@[m [mexport const getAllDrives = async () => {[m
     return rows;[m
 };[m
 [m
[32m+[m[32mexport const deleteDrive = async (drive_id) => {[m
[32m+[m[32m    const { rows } = await query([m
[32m+[m[32m        `DELETE FROM placement_drive WHERE drive_id = $1 RETURNING *;`,[m[41m [m
[32m+[m[32m        [drive_id][m
[32m+[m[32m    );[m
[32m+[m[32m    return rows[0]; // Returns the deleted company if successful[m
[32m+[m[32m};[m
[32m+[m
 export const getUpcomingDrives = async () => {[m
     const { rows } = await query(`[m
         SELECT * FROM placement_drive[m
[36m@@ -71,4 +79,62 @@[m [mexport const getOngoingDrives = async () => {[m
         AND start_date + duration >= CURRENT_DATE[m
     `);[m
     return rows;[m
[31m-};[m
\ No newline at end of file[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport const updateDrive = async (drive_id, updatedData) => {[m
[32m+[m[32m    const {[m
[32m+[m[32m        company_id, job_role, start_date, // These are part of the unique constraint[m
[32m+[m[32m    } = updatedData;[m
[32m+[m
[32m+[m[32m    // Check if a row already exists with the same company_id, job_role, start_date (excluding current drive_id)[m
[32m+[m[32m    const existingDrive = await query([m
[32m+[m[32m        `SELECT * FROM placement_drive[m[41m [m
[32m+[m[32m         WHERE company_id = $1[m[41m [m
[32m+[m[32m           AND job_role = $2[m[41m [m
[32m+[m[32m           AND start_date = $3[m[41m [m
[32m+[m[32m           AND drive_id <> $4`,  // Exclude the current row[m
[32m+[m[32m        [company_id, job_role, start_date, drive_id][m
[32m+[m[32m    );[m
[32m+[m
[32m+[m[32m    if (existingDrive.rows.length > 0) {[m
[32m+[m[32m        throw new Error("A placement drive with the same company, role, and start date already exists.");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // If no duplicate, proceed with update[m
[32m+[m[32m    const { rows } = await query([m
[32m+[m[32m        `[m
[32m+[m[32m        UPDATE placement_drive[m[41m [m
[32m+[m[32m        SET[m[41m [m
[32m+[m[32m            company_id = $1,[m[41m [m
[32m+[m[32m            job_role = $2,[m[41m [m
[32m+[m[32m            num_of_rounds = $3,[m[41m [m
[32m+[m[32m            training_package = $4,[m[41m [m
[32m+[m[32m            permanent_package = $5,[m[41m [m
[32m+[m[32m            drive_mode = $6,[m[41m [m
[32m+[m[32m            drive_type = $7,[m[41m [m
[32m+[m[32m            start_date = $8,[m[41m [m
[32m+[m[32m            last_date_to_submit = $9,[m[41m [m
[32m+[m[32m            no_of_backlogs_permitted = $10,[m[41m [m
[32m+[m[32m            supply_history_allowed = $11,[m[41m [m
[32m+[m[32m            min_cgpa_required = $12,[m[41m [m
[32m+[m[32m            focused_branches = $13,[m[41m [m
[32m+[m[32m            description = $14,[m[41m [m
[32m+[m[32m            registration_link = $15,[m[41m [m
[32m+[m[32m            work_location = $16[m
[32m+[m[41m            [m
[32m+[m[32m        WHERE drive_id = $17[m
[32m+[m[32m        RETURNING *;[m
[32m+[m[32m        `,[m
[32m+[m[32m        [[m
[32m+[m[32m            company_id, job_role, updatedData.num_of_rounds, updatedData.training_package,[m[41m [m
[32m+[m[32m            updatedData.permanent_package, updatedData.drive_mode, updatedData.drive_type,[m[41m [m
[32m+[m[32m            start_date, updatedData.last_date_to_submit, updatedData.no_of_backlogs_permitted,[m[41m [m
[32m+[m[32m            updatedData.supply_history_allowed, updatedData.min_cgpa_required,[m[41m [m
[32m+[m[32m            updatedData.focused_branches, updatedData.description, updatedData.registration_link,[m[41m [m
[32m+[m[32m            updatedData.work_location, drive_id[m
[32m+[m[32m        ][m
[32m+[m[32m    );[m
[32m+[m
[32m+[m[32m    return rows[0]; // Returns the updated placement drive[m
[32m+[m[32m};[m
[41m+[m
[1mdiff --git a/src/Admin/AdminDashboard/Dashboard.jsx b/src/Admin/AdminDashboard/Dashboard.jsx[m
[1mindex 74d9c5b..cd33971 100644[m
[1m--- a/src/Admin/AdminDashboard/Dashboard.jsx[m
[1m+++ b/src/Admin/AdminDashboard/Dashboard.jsx[m
[36m@@ -111,44 +111,50 @@[m [museEffect(() => {[m
 }, []);[m
 [m
 [m
[31m-  const [formDrive, setFormDrive] = useState({[m
[31m-  drive_id: "",[m
[31m-  company_name: "",[m
[31m-  job_role: "",[m
[31m-  num_of_rounds: "",[m
[31m-  training_package: "",[m
[31m-  permanent_package: "",[m
[31m-  drive_mode: "",[m
[31m-  drive_type: "",[m
[31m-  start_date: "",[m
[31m-  last_date_to_submit: "",[m
[31m-  no_of_backlogs_permitted: "",[m
[31m-  supply_history_allowed: false,[m
[31m-  min_cgpa_required: "",[m
[31m-  focused_branches: [],[m
[31m-  work_location: "",[m
[31m-  });[m
[32m+[m[32mconst [formDrive, setFormDrive] = useState({[m
[32m+[m[32m    drive_id: "", // Primary key for updating drive[m
[32m+[m[32m    company_id: "", // Changed from company_name â†’ company_id to match DB[m
[32m+[m[32m    job_role: "",[m
[32m+[m[32m    num_of_rounds: "",[m
[32m+[m[32m    training_package: "",[m
[32m+[m[32m    permanent_package: "",[m
[32m+[m[32m    drive_mode: "",[m
[32m+[m[32m    drive_type: "",[m
[32m+[m[32m    start_date: "",[m
[32m+[m[32m    last_date_to_submit: "",[m
[32m+[m[32m    no_of_backlogs_permitted: "",[m
[32m+[m[32m    supply_history_allowed: false, // Boolean field[m
[32m+[m[32m    min_cgpa_required: "",[m
[32m+[m[32m    focused_branches: [], // Array field[m
[32m+[m[32m    description: "", // Added to match DB[m
[32m+[m[32m    registration_link: "", // Added to match DB[m
[32m+[m[32m    work_location: "",[m
[32m+[m[41m   [m
[32m+[m[32m});[m
[32m+[m
   [m
 [m
   const handleDriveChange = (drive) => {[m
[31m-    setFormDrive({[m
[31m-  drive_id: drive.drive_id,[m
[31m-  company_name: drive.company_name,[m
[31m-  job_role: drive.job_role || "",[m
[31m-  num_of_rounds: drive.num_of_rounds || "",[m
[31m-  training_package: drive.training_package || "",[m
[31m-  permanent_package: drive.permanent_package || "",[m
[31m-  drive_mode: drive.drive_mode || "",[m
[31m-  drive_type: drive.drive_type || "",[m
[31m-  start_date: drive.start_date || "",[m
[31m-  last_date_to_submit: drive.last_date_to_submit || "",[m
[31m-  no_of_backlogs_permitted: drive.no_of_backlogs_permitted || "",[m
[31m-  supply_history_allowed: drive.supply_history_allowed ?? false, // Handling boolean values[m
[31m-  min_cgpa_required: drive.min_cgpa_required || "",[m
[31m-  focused_branches: drive.focused_branches || [],[m
[31m-  work_location: drive.work_location || "",[m
[31m-});[m
[31m-[m
[32m+[m[32m   setFormDrive({[m
[32m+[m[32m        drive_id: drive.drive_id || "", // Ensuring primary key exists[m
[32m+[m[32m        company_id: drive.company_id || "", // Changed from company_name â†’ company_id to match DB[m
[32m+[m[32m        job_role: drive.job_role || "",[m
[32m+[m[32m        num_of_rounds: drive.num_of_rounds || "",[m
[32m+[m[32m        training_package: drive.training_package || "",[m
[32m+[m[32m        permanent_package: drive.permanent_package || "",[m
[32m+[m[32m        drive_mode: drive.drive_mode || "",[m
[32m+[m[32m        drive_type: drive.drive_type || "",[m
[32m+[m[32m        start_date: drive.start_date || "",[m
[32m+[m[32m        last_date_to_submit: drive.last_date_to_submit || "",[m
[32m+[m[32m        no_of_backlogs_permitted: drive.no_of_backlogs_permitted || "",[m
[32m+[m[32m        supply_history_allowed: drive.supply_history_allowed ?? false, // Boolean handling[m
[32m+[m[32m        min_cgpa_required: drive.min_cgpa_required || "",[m
[32m+[m[32m        focused_branches: drive.focused_branches || [], // Ensuring array consistency[m
[32m+[m[32m        description: drive.description || "", // Added to match DB[m
[32m+[m[32m        registration_link: drive.registration_link || "", // Added to match DB[m
[32m+[m[32m        work_location: drive.work_location || "",[m
[32m+[m[41m        [m
[32m+[m[32m    });[m
 setTimeout(() => setDrivechoose(true), 10);[m
   }[m
 [m
[36m@@ -192,6 +198,30 @@[m [mconst handleDeleteClick = async (company) => {[m
   };[m
 [m
 [m
[32m+[m[32m const handleDriveSubmit = async (e) => {[m
[32m+[m[32m    e.preventDefault();[m[41m [m
[32m+[m
[32m+[m[32m    if (!formDrive.drive_id || isNaN(Number(formDrive.drive_id))) {[m
[32m+[m[32m        alert("Invalid drive ID. Please select a valid drive.");[m
[32m+[m[32m        return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    try {[m
[32m+[m[32m        const response = await axios.put('http://localhost:3000/portal/updateDrive', {[m
[32m+[m[32m            ...formDrive,[m
[32m+[m[32m            drive_id: Number(formDrive.drive_id),  // Convert `drive_id` to integer[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m[32m        if (response.status === 200) {  // Fix: response should check `status`[m
[32m+[m[32m            alert("Drive updated successfully!");[m
[32m+[m[32m            setDrivechoose(false);[m
[32m+[m[32m        }[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m        console.error("Error updating Drive:", error);[m
[32m+[m[32m        alert("Failed to update Drive.");[m
[32m+[m[32m    }[m
[32m+[m[32m};[m
[32m+[m
   //Updation of company from front[m
   const handleCompanySubmit = async (e) => {[m
     e.preventDefault(); // Prevent default form submission behavior[m
[36m@@ -395,7 +425,7 @@[m [mconst handleDeleteClick = async (company) => {[m
       <thead style={{ backgroundColor: "#005f69", color: "white" }}>[m
         <tr>[m
           <th className="px-4 py-2">Drive ID</th>[m
[31m-          <th className="px-4 py-2">Company Name</th>[m
[32m+[m[32m          <th className="px-4 py-2">Company ID</th>[m
           <th className="px-4 py-2">Job Role</th>[m
           <th className="px-4 py-2">Rounds</th>[m
           <th className="px-4 py-2">Training Package</th>[m
[36m@@ -419,7 +449,7 @@[m [mconst handleDeleteClick = async (company) => {[m
         {drives.map((drive) => ([m
           <tr key={drive.drive_id}>[m
             <td className="px-4 py-3">{drive.drive_id}</td>[m
[31m-            <td className="px-4 py-3">{drive.company_name || "Unknown"}</td>[m
[32m+[m[32m            <td className="px-4 py-3">{drive.company_id || "Unknown"}</td>[m
             <td className="px-4 py-3">{drive.job_role}</td>[m
             <td className="px-4 py-3">{drive.num_of_rounds}</td>[m
             <td className="px-4 py-3">{drive.training_package} LPA</td>[m
[36m@@ -471,7 +501,7 @@[m [mconst handleDeleteClick = async (company) => {[m
     <div className="bg-white p-6 rounded-2xl shadow-xl w-1/2">[m
       <h2 className="text-3xl text-[#005f69] font-bold mb-6 text-center my-7">Update Drive</h2>[m
 [m
[31m-      <form action="#" className="space-y-4">[m
[32m+[m[32m      <form onSubmit={handleDriveSubmit} className="space-y-4">[m
         <div className="grid gap-4 sm:grid-cols-3">[m
           {Object.keys(formDrive).map((key) => ([m
             <div key={key}>[m
[36m@@ -482,7 +512,7 @@[m [mconst handleDeleteClick = async (company) => {[m
                 type={key === "supply_history_allowed" ? "checkbox" : "text"}[m
                 name={key}[m
                 value={formDrive[key]}[m
[31m-                onChange={handleDriveChange}[m
[32m+[m[32m                onChange={handleDrive}[m
                 className="border border-gray-300 text-gray-900 text-sm rounded-lg w-full p-2.5 focus:ring-2 focus:ring-blue-400"[m
                 readOnly={key === "drive_id"} [m
               />[m
[1mdiff --git a/src/Admin/AdminDashboard/UploadOrDeleteDrive.jsx b/src/Admin/AdminDashboard/UploadOrDeleteDrive.jsx[m
[1mindex f3e2fec..c658747 100644[m
[1m--- a/src/Admin/AdminDashboard/UploadOrDeleteDrive.jsx[m
[1m+++ b/src/Admin/AdminDashboard/UploadOrDeleteDrive.jsx[m
[36m@@ -1,6 +1,6 @@[m
 import React, { useState,useEffect } from "react";[m
 import { useNavigate } from "react-router-dom";[m
[31m-[m
[32m+[m[32mimport axios from "axios";[m
 const UploadOrDeleteDrive = () => {[m
   const navigate = useNavigate();[m
   const [placementDriveData, setPlacementDriveData] = useState({[m
[36m@@ -52,7 +52,12 @@[m [mconst UploadOrDeleteDrive = () => {[m
     e.preventDefault();[m
     console.log("Console is triggerd !! dont worry");[m
     console.log("Submitting data:", JSON.stringify(placementDriveData, null, 2));[m
[31m-[m
[32m+[m[32m    try {[m
[32m+[m[32m      const response = await axios.post("http://localhost:3000/portal/add-drive", placementDriveData);[m
[32m+[m[32m      console.log("Drive successfully Enterd into database !!",response.data);[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.log("There is an error for insertion :", error);[m
[32m+[m[32m    }[m
     navigate(`/Admin-dashboard/AddRounds/${round}`);[m
   };[m
 [m
[36m@@ -113,7 +118,7 @@[m [mconst UploadOrDeleteDrive = () => {[m
       {/* Permanent Package */}[m
       <div className="mb-6">[m
         <label className="text-[#005f69] font-semibold">Permanent Package (â‚¹):</label>[m
[31m-        <input type="number" name="permenent_package" value={placementDriveData.permanent_package} onChange={handleChange} className="w-full text-gray-800 bg-white border border-[#005f69] rounded-lg focus:outline-none focus:ring focus:ring-blue-500 p-2" required min="0" />[m
[32m+[m[32m        <input type="number" name="permanent_package" value={placementDriveData.permanent_package} onChange={handleChange} className="w-full text-gray-800 bg-white border border-[#005f69] rounded-lg focus:outline-none focus:ring focus:ring-blue-500 p-2" required min="0" />[m
       </div>[m
 [m
           {/* Drive Mode */}[m
